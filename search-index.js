var searchIndex = {};
searchIndex["stats_alloc"] = {"doc":"An instrumenting middleware for global allocators in Rust, useful in testing for validating assumptions regarding allocation patterns, and potentially in production loads to monitor for memory leaks.","items":[[3,"StatsAlloc","stats_alloc","An instrumenting middleware which keeps track of allocation, deallocation, and reallocation requests to the underlying global allocator.",null,null],[3,"Stats","","Allocator statistics",null,null],[3,"Region","","A snapshot of the allocation statistics, which can be used to determine allocation changes while the `Region` is alive.",null,null],[7,"INSTRUMENTED_SYSTEM","","An instrumented instance of the system allocator.",null,null],[11,"default","","",0,{"o":{"n":"statsalloc"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"stats"}}],[11,"default","","",1,{"o":{"n":"stats"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",1,null],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"stats"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"stats"}],"o":{"n":"bool"}}],[11,"system","","Provides access to an instrumented instance of the system allocator.",0,{"o":{"n":"self"}}],[11,"new","","Provides access to an instrumented instance of the given global allocator.",0,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"stats","","Takes a snapshot of the current view of the allocator statistics.",0,{"i":[{"n":"self"}],"o":{"n":"stats"}}],[11,"sub","","",1,null],[11,"sub_assign","","",1,{"i":[{"n":"self"},{"n":"self"}]}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new region using statistics from the given instrumented allocator.",2,{"i":[{"n":"statsalloc"}],"o":{"n":"self"}}],[11,"initial","","Returns the statistics as of instantiation or the last reset.",2,{"i":[{"n":"self"}],"o":{"n":"stats"}}],[11,"change","","Returns the difference between the currently reported statistics and those provided by `initial()`.",2,{"i":[{"n":"self"}],"o":{"n":"stats"}}],[11,"change_and_reset","","Returns the difference between the currently reported statistics and those provided by `initial()`, resetting initial to the latest reported statistics.",2,{"i":[{"n":"self"}],"o":{"n":"stats"}}],[11,"reset","","Resets the initial initial to the latest reported statistics from the referenced allocator.",2,{"i":[{"n":"self"}]}],[11,"alloc","","",0,null],[11,"dealloc","","",0,null],[11,"alloc_zeroed","","",0,null],[11,"realloc","","",0,null]],"paths":[[3,"StatsAlloc"],[3,"Stats"],[3,"Region"]]};
initSearch(searchIndex);
